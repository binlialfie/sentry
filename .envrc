# This is the .envrc for Sentry, for use with direnv.
# We use it for:
#   - lightweight (crucial since it's run on every cd to here) state checking and assurance (e.g. activating the venv)
#   - one-time heavyweight state initialization (such as creating a .venv)
#       - TODO: heavyweight state assurance, such as syncing venv, should happen in a one-off "fixall" script
#               and should be recommended by direnv as a catch-all fixer
#       - Although, this kind of state initialization could be moved to there from here in the future.
#   - setting useful environment variables

export PYTHONDONTWRITEBYTECODE=1
export PIP_DISABLE_PIP_VERSION_CHECK=on

export NODE_OPTIONS=--max-old-space-size=4096

require () {
    command -v "$1" 2>&1 > /dev/null
}

die () {
    >&2 echo "fatal: ${1}"; exit 1
}

init_venv () {
    deactivate 2>/dev/null || true
    python2.7 -c "import sys; sys.exit(sys.version_info[:2] != (2, 7))" || \
        die "You'll need to install python2.7. It's recommended to use pyenv."
    python2.7 -m virtualenv .venv
}

set -e

# TODO: check for system packages, and provide platform-specific (macos for now) advice to install.

# direnv set -u's; unsure if it's a good idea to set +u.
VIRTUAL_ENV="${VIRTUAL_ENV-}"

if [ -n "$VIRTUAL_ENV" ]; then
    # we're enforcing that virtualenv be in .venv, since future tooling e.g. venv-update will rely on this.
    if [ "$VIRTUAL_ENV" != "${PWD}/.venv" ]; then
        echo "You're in a virtualenv, but it's not in the expected location (${PWD}/.venv)"
        init_venv
    fi
else
    if [ ! -f ".venv/bin/activate" ]; then
        echo "You don't seem to have a virtualenv."
        init_venv
    fi
fi

echo "Activating virtualenv."
source .venv/bin/activate

python -c "import sys; sys.exit(sys.version_info[:2] != (2, 7))" || \
    die "For some reason, the virtualenv isn't Python 2.7."

if [ "$(command -v sentry)" != "${PWD}/.venv/bin/sentry" ]; then
    echo "Your .venv is activated, but sentry doesn't seem to be installed. Let's install it."
    make ensure-pinned-pip
    # TODO: use venv-update to create venv. this assumes virtualenv is installed
    # which is reasonable if python2.7 is via pyenv. I forget if brew python@2 contains it.
    SENTRY_LIGHT_BUILD=1 make install-sentry-dev
fi
