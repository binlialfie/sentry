export PYTHONDONTWRITEBYTECODE=1
export PIP_DISABLE_PIP_VERSION_CHECK=on

export NODE_OPTIONS=--max-old-space-size=4096

die () {
    >&2 echo "$1"; exit 1
}

ensure_python27 () {
    python2.7 -c "import sys; sys.exit(sys.version_info[:2] != (2, 7))"
    return $?
}

set -e

# TODO: enforce that virtualenv is in .venv, since future tooling (venv-update) will rely on this
if [ -z "${VIRTUAL_ENV-}" ]; then
    if [ ! -f ".venv/bin/activate" ]; then
        ensure_python27 || die "You'll need to install python2.7."
        echo "You don't seem to have a virtualenv, so let's make you one."
        # TODO: use venv-update to create + sync venv. this assumes virtualenv is installed
        # which is reasonable if python2.7 is via pyenv. I forget if brew python@2 contains it.
        python2.7 -m virtualenv .venv
    fi
    echo "Activating virtualenv."
    source .venv/bin/activate
fi
